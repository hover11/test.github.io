<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0"
         metadata-complete="true">
    <display-name>schoolmatenote</display-name>
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>
    <!--  <servlet>这个标签指的是这个项目名里面的springmvc.xml文件 -->
    <servlet>
        <servlet-name>schoolmatenote</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <!-- <load-on-startup>1</load-on-startup>表示容器一加载(浏览器查找路径)就映射到上面的xml文件	 -->
    </servlet>
    <servlet-mapping>
        <servlet-name>schoolmatenote</servlet-name>
        <!-- 注意:/会匹配所有url，springmvc进行拦截(包括客户端浏览器对服务器的URL请求和jsp文件对静态资源的请求)(以工程项目来说,即外部请求和内部请求)
         换句话说:所有的url(静态资源[图片,css,js,html]),Controller的url都会到前端控制器,前端控制器调用处理器映射器 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 配置applicationContext -->
    <!-- 启动一个web项目的时候，容器（如：tomcat）会去读它的配置文件web.xml。读两个节点：<listener></listener>和<context-param></context-param>
         <context-param></context-param>里面的配置传给上下文，<listener></listener>监听器是监听<context-param>的配置是和否运行完成并传递消息给springmvc.xml,最后控制类自动连接springmvc.xml的页面前后缀进行页面内容展示(显示的是jsp的内容，但路径则是RequestMapping注解的映射路径) -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 过滤器 -->
    <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <!-- 	过滤器加路径是/*则拦截所有路径(包括显示的jsp界面)(ecoding的作用?)	 -->
        <filter-name>encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>
